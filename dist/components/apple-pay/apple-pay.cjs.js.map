{"version":3,"file":"apple-pay.cjs.js","sources":["../../../src/components/apple-pay/apple-pay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '~/contexts/form';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { ApplePayContainer } from './apple-pay.styles';\nimport type { ApplePayProps } from './apple-pay.types';\n\n/**\n * Renders a Apple Pay button to use in the Square Web Payment SDK, pre-styled\n * to meet Apple Pay's branding guidelines.\n *\n * **Remember** that you need to set `createPaymentRequest()` in `SquareForm` if\n * you going to use this Payment Method\n *\n * @example\n *\n * ```tsx\n * function App() {\n *   return (\n *     <SquareForm {...props}>\n *       <ApplePay />\n *     </SquareForm>\n *   );\n * }\n * ```\n */\nfunction ApplePay({ id = 'rswps-apple-pay', ...props }: ApplePayProps) {\n  const [applePay, setApplePay] = React.useState<Square.ApplePay | undefined>(() => undefined);\n  const { cardTokenizeResponseReceived, createPaymentRequest, payments } = useForm();\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  /**\n   * Handle the on click of the Apple Pay button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (!applePay) {\n      console.warn('Apple Pay button was clicked, but no Apple Pay instance was found.');\n\n      return;\n    }\n\n    try {\n      const result = await applePay.tokenize();\n\n      if (result.status === 'OK') {\n        return cardTokenizeResponseReceived(result);\n      }\n\n      let message = `Tokenization failed with status: ${result.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!createPaymentRequest) {\n      throw new Error('`createPaymentRequest()` is required when using digital wallets');\n    }\n\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\n\n      if (!paymentRequest) {\n        throw new Error('`paymentRequest` is required when using digital wallets');\n      }\n\n      try {\n        const applePay = await payments?.applePay(paymentRequest).then((res) => {\n          if (signal?.aborted) {\n            return;\n          }\n\n          setApplePay(res);\n\n          return res;\n        });\n\n        if (signal.aborted) {\n          await applePay?.destroy();\n        }\n      } catch (error) {\n        console.error('Initializing Apple Pay failed', error);\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [createPaymentRequest, payments]);\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: containerRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  return (\n    <ApplePayContainer\n      {...props}\n      // We need to make this styles to be able to use event listener\n      css={{\n        display: applePay ? 'block' : 'none',\n        opacity: applePay ? 1 : 0.5,\n        pointerEvents: applePay ? 'auto' : 'none',\n        visibility: applePay ? 'visible' : 'hidden',\n      }}\n      id={id}\n      ref={containerRef}\n    ></ApplePayContainer>\n  );\n}\n\nexport default ApplePay;\nexport * from './apple-pay.types';\n"],"names":["ApplePay","id","props","applePay","setApplePay","React","cardTokenizeResponseReceived","createPaymentRequest","payments","useForm","containerRef","handlePayment","e","result","message","error","abortController","signal","paymentRequest","res","useEventListener","ApplePayContainer"],"mappings":"kkBA6BA,SAASA,EAAS,CAAE,GAAAC,EAAK,qBAAsBC,GAAwB,CACrE,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAM,SAAsC,IAAA,EAAe,EACrF,CAAE,6BAAAC,EAA8B,qBAAAC,EAAsB,SAAAC,GAAaC,EAAQ,QAAA,EAC3EC,EAAeL,EAAM,OAAuB,IAAI,EAQhDM,EAAgB,MAAOC,GAAa,CAGxC,GAFAA,EAAE,gBAAgB,EAEd,CAACT,EAAU,CACb,QAAQ,KAAK,oEAAoE,EAEjF,MACF,CAEI,GAAA,CACI,MAAAU,EAAS,MAAMV,EAAS,WAE1B,GAAAU,EAAO,SAAW,KACpB,OAAOP,EAA6BO,CAAM,EAGxC,IAAAC,EAAU,oCAAoCD,EAAO,SACzD,GAAIA,GAAQ,OACV,MAAAC,GAAW,gBAAgB,KAAK,UAAUD,GAAQ,MAAM,IAElD,IAAI,MAAMC,CAAO,EAGzB,QAAQ,KAAKA,CAAO,QACbC,GACP,QAAQ,MAAMA,CAAK,CACrB,CAAA,EAGFV,OAAAA,EAAM,UAAU,IAAM,CACpB,GAAI,CAACE,EACG,MAAA,IAAI,MAAM,iEAAiE,EAG7E,MAAAS,EAAkB,IAAI,gBACtB,CAAE,OAAAC,CAAW,EAAAD,EA4BnB,OA1Bc,MAAOC,GAAwB,CACrC,MAAAC,EAAiBV,GAAU,eAAeD,CAAoB,EAEpE,GAAI,CAACW,EACG,MAAA,IAAI,MAAM,yDAAyD,EAGvE,GAAA,CACIf,MAAAA,EAAW,MAAMK,GAAU,SAASU,CAAc,EAAE,KAAMC,GAAQ,CACtE,GAAIF,CAAAA,GAAQ,QAIZ,OAAAb,EAAYe,CAAG,EAERA,CAAA,CACR,EAEGF,EAAO,SACT,MAAMd,GAAU,gBAEXY,GACC,QAAA,MAAM,gCAAiCA,CAAK,CACtD,CAAA,GAGIE,CAAM,EAEL,IAAM,CACXD,EAAgB,MAAM,CAAA,CACxB,EACC,CAACT,EAAsBC,CAAQ,CAAC,EAElBY,mBAAA,CACf,SAAUT,EACV,KAAM,QACN,QAASD,EACT,QAAS,CACP,QAAS,EACX,CAAA,CACD,EAGCL,EAAA,cAACgB,EAAA,kBAAA,CACE,GAAGnB,EAEJ,IAAK,CACH,QAASC,EAAW,QAAU,OAC9B,QAASA,EAAW,EAAI,GACxB,cAAeA,EAAW,OAAS,OACnC,WAAYA,EAAW,UAAY,QACrC,EACA,GAAAF,EACA,IAAKS,CAAA,CAAA,CAGX"}